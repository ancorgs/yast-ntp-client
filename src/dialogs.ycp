/**
 * File:	include/ntp-client/dialogs.ycp
 * Package:	Configuration of ntp-client
 * Summary:	Dialogs definitions
 * Authors:	Jiri Srain <jsrain@suse.cz>
 *
 * $Id$
 */

{

textdomain "ntp-client";

import "NtpClient";
import "Wizard";
import "CWM";

include "ntp-client/helps.ycp";
include "ntp-client/routines.ycp";

/**
 * Read settings dialog
 * @return `abort if aborted and `next otherwise
 */
global define symbol ReadDialog() ``{
    Wizard::RestoreHelp(HELPS["read"]:"");
    NtpClient::AbortFunction = ``{ return PollAbort();};
    boolean ret = NtpClient::Read();
    return ret ? `next : `abort;
}

/**
 * Write settings dialog
 * @return `abort if aborted and `next otherwise
 */
global define symbol WriteDialog() ``{
    Wizard::RestoreHelp(HELPS["write"]:"");
    NtpClient::AbortFunction = ``{ return PollAbort();};
    boolean ret = NtpClient::Write();
    return ret ? `next : `abort;
}

/**
 * Main dialog
 * @return symbol for wizard sequencer
 */
global define symbol MainDialog () ``{
    term contents = `HBox (`HSpacing (1), `VBox (
	`VSpacing (1),
	`HBox (
	    `HStretch (),
	    "start",
	    `HStretch ()
	),
	`VSpacing (1),
	"overview",
	`VSpacing (1)
    ), `HSpacing (1));

    // dialog caption
    string caption = _("NTP client configuration");

    return CWM::ShowAndRun (["start", "overview"], NtpClient::widgets,
	contents, caption, Label::BackButton (), Label::FinishButton (), $[]);
}

/**
 * Server editing dialog
 * @return symbol for wizard sequencer
 */
global define symbol ServerDialog () ``{
    term contents = `HBox (`HSpacing (1), `VBox (
	`VSpacing (1),
	"address",
	"init_sync",
	`VSpacing (1)
    ), `HSpacing (1));

    // dialog caption
    string caption = _("Configure NTP server");

   return CWM::ShowAndRun (["address", "init_sync"], NtpClient::widgets,
	contents, caption, Label::BackButton (), Label::OKButton (), $[]);
}

/**
 * Peer editing dialog
 * @return symbol for wizard sequencer
 */
global define symbol PeerDialog () ``{
    term contents = `HBox (`HSpacing (1), `VBox (
	`VSpacing (1),
	"address",
	`VSpacing (1)
    ), `HSpacing (1));

    // dialog caption
    string caption = _("Configure NTP peer");

    return CWM::ShowAndRun (["address"], NtpClient::widgets,
	contents, caption, Label::BackButton (), Label::OKButton (), $[]);
}

/**
 * Pseudo-dialog to store settings to main structure
 * @return symbol for wizard sequencer
 */

global define symbol StoreRecord () ``{
    if (NtpClient::selected_item_index == -1)
	NtpClient::peers = add (NtpClient::peers, NtpClient::selected_item);
    else
	NtpClient::peers[NtpClient::selected_item_index]
	    = NtpClient::selected_item;
    return `next;
}


/* EOF */
}
